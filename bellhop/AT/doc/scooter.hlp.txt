
\SCOOTER\ is a finite element code for computing acoustic fields in
range-independent environments.  The method is based on direct
computation of the spectral integral (reflectivity or FFP method).
Pressure is approximated by piecewise-linear elements as are the
material properties. (One exception is the density which is
approximated by piecewise constant elements). 

The \SCOOTER\ package includes two modules:

\begin{verbatim}

        SCOOTER the main program

        FIELDS  Produces shade files or
                plots of the Green's function and transmission loss.

The input (.ENV) file is identical to that used by KRAKEN or KRAKENC.
The output is a Green's function file  (in place of the mode file
produced by KRAKEN ).

Note that SCOOTER includes the effect of density gradients within
media (KRAKEN and KRAKENC do not). Also, interfacial scatter is not
treated in SCOOTER. 

Files:

        Name           Unit         Description
Input
        *.ENV            1       ENVironmental data
        *.BRC           10       Bottom   Refl. Coef.  (optl)
        *.TRC           11       Top      Refl. Coef.  (optl)
        *.IRC           12       Internal Refl. Coef.  (optl)
Output
        *.PRT            6       PRinT file
        *.GRN           20       GReen's function

---------------------------------------------------------

EXAMPLE AND DESCRIPTION OF ENV FILE:

'Pekeris problem'
10.0
1
'NVF'
500  0.0  2
     0.0  1500.0 /
  5000.0  1500.0 /
'A'  0.0
  5000.0  2000.0  0.0  2.0 /
1400.0  2000.0
500.0                    ! RMAX (km)
1                        ! NSD
500.0 /                  ! SD(1:NSD) (m)
1                        ! NRD
2500.0 /                 ! RD(1:NRD) (m)

\end{verbatim}

RMAX is the maximum range for a receiver.  It translates directly into
the number of k-space points that will be used in the spectral
integral. CPU time is proportional to RMAX so it shouldn't be any
larger than necessary.

Note that both source and receiver must lie within the finite element
domain. That is, the capability for placing source or receiver in the
homogeneous half-space has not been implemented. 

CPU time is roughly independent of the number of receivers but
increases linearly with the number of sources.  (However, the first
source requires about 3 times as much CPU time as subsequent sources,
since an LU decomposition is required only for the first source.) 

Shade files or plots of transmission loss versus range are obtained by
running FIELDS which uses the '.GRN' file as input. 

